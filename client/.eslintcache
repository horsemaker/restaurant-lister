[{"D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\index.js":"1","D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\context\\RestaurantsContext.js":"2","D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\components\\RestaurantList.js":"3","D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\components\\UpdateRestaurant.js":"4","D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\components\\Reviews.js":"5","D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\components\\AddRestaurant.js":"6","D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\api\\RestaurantFinder.js":"7","D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\App.js":"8","D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\routes\\Home.js":"9","D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\routes\\UpdatePage.js":"10","D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\routes\\RestaurantDetailPage.js":"11","D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\components\\Header.js":"12","D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\components\\StarRating.js":"13","D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\components\\AddReview.js":"14"},{"size":150,"mtime":1606236357732,"results":"15","hashOfConfig":"16"},{"size":641,"mtime":1606387999182,"results":"17","hashOfConfig":"16"},{"size":3749,"mtime":1606471671957,"results":"18","hashOfConfig":"16"},{"size":2891,"mtime":1606305172054,"results":"19","hashOfConfig":"16"},{"size":3489,"mtime":1606413322614,"results":"20","hashOfConfig":"16"},{"size":2356,"mtime":1606290992173,"results":"21","hashOfConfig":"16"},{"size":126,"mtime":1609358955136,"results":"22","hashOfConfig":"16"},{"size":913,"mtime":1606236346105,"results":"23","hashOfConfig":"16"},{"size":380,"mtime":1606227737514,"results":"24","hashOfConfig":"16"},{"size":365,"mtime":1606305350398,"results":"25","hashOfConfig":"16"},{"size":1829,"mtime":1606472593344,"results":"26","hashOfConfig":"16"},{"size":259,"mtime":1606388290994,"results":"27","hashOfConfig":"16"},{"size":621,"mtime":1606413417884,"results":"28","hashOfConfig":"16"},{"size":2590,"mtime":1606464801357,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"x7nsxk",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\index.js",[],["63","64"],"D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\context\\RestaurantsContext.js",[],"D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\components\\RestaurantList.js",["65"],"import React, { useContext, useEffect } from 'react';\r\nimport RestaurantFinder from '../api/RestaurantFinder';\r\nimport { RestaurantsContext } from './../context/RestaurantsContext';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport StarRating from './StarRating';\r\n\r\nconst RestaurantList = (props) => {\r\n\r\n    const { restaurants, setRestaurants } = useContext(RestaurantsContext);\r\n\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await RestaurantFinder.get(\"/\");\r\n                setRestaurants(response.data.data.restaurants);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleDelete = async (e, id) => {\r\n        e.stopPropagation();\r\n\r\n        try {\r\n            await RestaurantFinder.delete(`/${id}`);\r\n            setRestaurants(restaurants.filter((restaurant) => {\r\n                return restaurant.id !== id;\r\n            }));\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const handleUpdate = (e, id) => {\r\n        e.stopPropagation();\r\n        \r\n        history.push(`/restaurants/${id}/update`);\r\n    };\r\n\r\n    const handleRestaurantSelect = (id) => {\r\n        history.push(`/restaurants/${id}`);\r\n    };\r\n\r\n    const renderRating = (restaurant) => {\r\n\r\n        if (!restaurant.count) {\r\n            return <span className=\"text-warning\">\r\n                0 Reviews\r\n            </span>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <StarRating rating={restaurant.average_rating} />\r\n                <span className=\"text-warning ml-1\">\r\n                    ({restaurant.count})\r\n                </span>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"list-group\">\r\n            <table className=\"table table-hover table-dark\">\r\n                <thead>\r\n                    <tr className=\"bg-primary\">\r\n                        <th scope=\"col\">Restaurant</th>\r\n                        <th scope=\"col\">Location</th>\r\n                        <th scope=\"col\">Price Range</th>\r\n                        <th scope=\"col\">Ratings</th>\r\n                        <th scope=\"col\">Edit</th>\r\n                        <th scope=\"col\">Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {restaurants && restaurants.map(restaurant => {\r\n                        return (\r\n                            <tr onClick={() => handleRestaurantSelect(restaurant.id)} key={restaurant.id}>\r\n                            <td>{restaurant.name}</td>\r\n                            <td>{restaurant.location}</td>\r\n                            <td>{\"₹\".repeat(restaurant.price_range)}</td>\r\n                            <td>{renderRating(restaurant)}</td>\r\n                            <td><button onClick={(e) => handleUpdate(e, restaurant.id)} className=\"btn btn-warning\">Update</button></td>\r\n                            <td><button onClick={(e) => handleDelete(e, restaurant.id)} className=\"btn btn-danger\">Delete</button></td>\r\n                        </tr>\r\n                        );\r\n                    })}\r\n                    {/* <tr>\r\n                        <td>Mc Donalds</td>\r\n                        <td>Dadar</td>\r\n                        <td>₹₹₹</td>\r\n                        <td>Rating</td>\r\n                        <td><button className=\"btn btn-warning\">Update</button></td>\r\n                        <td><button className=\"btn btn-danger\">Delete</button></td>\r\n                    </tr> */}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RestaurantList;\r\n","D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\components\\UpdateRestaurant.js",["66","67","68"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport RestaurantFinder from '../api/RestaurantFinder';\r\n// import { RestaurantsContext } from '../context/RestaurantsContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst UpdateRestaurant = (props) => {\r\n\r\n    const {id} = useParams();\r\n\r\n    let history = useHistory();\r\n\r\n    // const { restaurants } = useContext(RestaurantsContext);\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [location, setLocation] = useState(\"\");\r\n    const [priceRange, setPriceRange] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            const response = await RestaurantFinder.get(`/${id}`);\r\n            console.log(response.data.data);\r\n            setName(response.data.data.restaurant.name);\r\n            setLocation(response.data.data.restaurant.location);\r\n            setPriceRange(response.data.data.restaurant.price_range);\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const updatedRestaurant = await RestaurantFinder.put(`/${id}`, {\r\n            name,\r\n            location,\r\n            price_range: priceRange\r\n        });\r\n        history.push(\"/\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form action=\"\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input id=\"name\" value={name} onChange={e => setName(e.target.value)} className=\"form-control\" type=\"text\"/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"location\">Location</label>\r\n                    <input id=\"location\" value={location} onChange={e => setLocation(e.target.value)} className=\"form-control\" type=\"text\"/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"price_range\">Price Range</label>\r\n                    {/* <input id=\"price_range\" className=\"form-control\" type=\"number\"/> */}\r\n                    <select id=\"price_range\" value={priceRange} onChange={e => setPriceRange(e.target.value)} className=\"custom-select my-1 mr-sm-2\">\r\n                        <option disabled>Price Range</option>\r\n                        <option value=\"1\">₹</option>\r\n                        <option value=\"2\">₹₹</option>\r\n                        <option value=\"3\">₹₹₹</option>\r\n                        <option value=\"4\">₹₹₹₹</option>\r\n                        <option value=\"5\">₹₹₹₹₹</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <button type=\"submit\" onClick={handleSubmit} className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateRestaurant;\r\n","D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\components\\Reviews.js",[],"D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\components\\AddRestaurant.js",[],"D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\api\\RestaurantFinder.js",[],"D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\App.js",[],"D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\routes\\Home.js",[],"D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\routes\\UpdatePage.js",[],"D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\routes\\RestaurantDetailPage.js",["69"],"import React, { useContext, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { RestaurantsContext } from '../context/RestaurantsContext';\r\nimport RestaurantFinder from \"../api/RestaurantFinder\";\r\nimport StarRating from '../components/StarRating';\r\nimport Reviews from '../components/Reviews';\r\nimport AddReview from '../components/AddReview';\r\n\r\nconst RestaurantDetailPage = () => {\r\n\r\n    const { id } = useParams();\r\n\r\n    const { selectedRestaurant, setSelectedRestaurant } = useContext(RestaurantsContext);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n\r\n            try {\r\n\r\n                const response = await RestaurantFinder.get(`/${id}`);\r\n                setSelectedRestaurant(response.data.data);\r\n\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {selectedRestaurant && (\r\n                <>\r\n                    <h1 className=\"font-weight-light display-1 text-center\">\r\n                        {selectedRestaurant.restaurant.name}\r\n                    </h1>\r\n                    <div className=\"text-center\">\r\n                        <StarRating rating={selectedRestaurant.restaurant.average_rating} />\r\n                        <span className=\"text-warning ml-1\">\r\n                            {selectedRestaurant.restaurant.count ? `(${selectedRestaurant.restaurant.count})` : \"(0)\"}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <Reviews reviews={selectedRestaurant.reviews} />\r\n                    </div>\r\n\r\n                    <AddReview />\r\n\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RestaurantDetailPage;\r\n","D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\components\\Header.js",[],"D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\components\\StarRating.js",[],"D:\\Desktop_Files\\ProjectX\\restaurant-lister\\client\\src\\components\\AddReview.js",["70"],"import React, { useState } from 'react';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport RestaurantFinder from '../api/RestaurantFinder';\r\n\r\nconst AddReview = () => {\r\n\r\n    const { id } = useParams();\r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [rating, setRating] = useState(\"Rating\");\r\n    const [reviewText, setReviewText] = useState(\"\");\r\n\r\n    const handleSubmitReview = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n\r\n            const response = await RestaurantFinder.post(`/${id}/addReview`, {\r\n                name,\r\n                review: reviewText,\r\n                rating\r\n            });\r\n\r\n            history.push(\"/\");\r\n\r\n            history.push(location.pathname);\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n        setName(\"\");\r\n        setRating(\"Rating\");\r\n        setReviewText(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"mb-2\">\r\n            <form action=\"\">\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-8\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input value={name} onChange={e => setName(e.target.value)} id=\"name\" placeholder=\"Name\" type=\"text\" className=\"form-control\"/>\r\n                    </div>\r\n                    <div className=\"form-group col-4\">\r\n                        <label htmlFor=\"rating\">Rating</label>\r\n                        <select value={rating} onChange={e => setRating(e.target.value)} id=\"rating\" className=\"custom-select\">\r\n                            <option disabled>Rating</option>\r\n                            <option value=\"1\">1</option>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"5\">5</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"review\">Review</label>\r\n                    <textarea value={reviewText} onChange={e => setReviewText(e.target.value)} id=\"review\" className=\"form-control\"></textarea>\r\n                </div>\r\n                <button type=\"submit\" onClick={handleSubmitReview} className=\"btn btn-primary\">\r\n                    Submit\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddReview;\r\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":24,"column":8,"nodeType":"77","endLine":24,"endColumn":10,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":27},{"ruleId":"75","severity":1,"message":"83","line":29,"column":8,"nodeType":"77","endLine":29,"endColumn":10,"suggestions":"84"},{"ruleId":"79","severity":1,"message":"85","line":34,"column":15,"nodeType":"81","messageId":"82","endLine":34,"endColumn":32},{"ruleId":"75","severity":1,"message":"86","line":30,"column":8,"nodeType":"77","endLine":30,"endColumn":10,"suggestions":"87"},{"ruleId":"79","severity":1,"message":"88","line":21,"column":19,"nodeType":"81","messageId":"82","endLine":21,"endColumn":27},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setRestaurants'. Either include it or remove the dependency array.","ArrayExpression",["91"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["92"],"'updatedRestaurant' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'setSelectedRestaurant'. Either include them or remove the dependency array.",["93"],"'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [setRestaurants]",{"range":"100","text":"101"},"Update the dependencies array to be: [id]",{"range":"102","text":"103"},"Update the dependencies array to be: [id, setSelectedRestaurant]",{"range":"104","text":"105"},[762,764],"[setRestaurants]",[1032,1034],"[id]",[891,893],"[id, setSelectedRestaurant]"]